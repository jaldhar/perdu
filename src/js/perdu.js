(function(){
var CIRCLE = Math.PI * 2;

var MOBILE = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)

function Controls() {
    this.codes  = { 37: 'left', 39: 'right', 38: 'forward', 40: 'backward' };
    this.states = { 'left': false, 'right': false, 'forward': false, 'backward': false };
    document.addEventListener('keydown', this.onKey.bind(this, true), false);
    document.addEventListener('keyup', this.onKey.bind(this, false), false);
    document.addEventListener('touchstart', this.onTouch.bind(this), false);
    document.addEventListener('touchmove', this.onTouch.bind(this), false);
    document.addEventListener('touchend', this.onTouchEnd.bind(this), false);
}

Controls.prototype.onTouch = function(e) {
    var t = e.touches[0];
    this.onTouchEnd(e);
    if (t.pageY < window.innerHeight * 0.5)
        this.onKey(true, { keyCode: 38 });
    else if (t.pageX < window.innerWidth * 0.5)
        this.onKey(true, { keyCode: 37 });
    else if (t.pageY > window.innerWidth * 0.5)
        this.onKey(true, { keyCode: 39 });
};

Controls.prototype.onTouchEnd = function(e) {
    this.states = { 'left': false, 'right': false, 'forward': false,
        'backward': false };
    e.preventDefault();
    e.stopPropagation();
};

Controls.prototype.onKey = function(val, e) {
    var state = this.codes[e.keyCode];
    if (typeof state === 'undefined')
        return;
    this.states[state] = val;
    e.preventDefault && e.preventDefault();
    e.stopPropagation && e.stopPropagation();
};

function canvasToImage(drawFunc, width, height) {
    var canvas = document.createElement("canvas");
    canvas.width = width;
    canvas.height = height;
    var ctx = canvas.getContext("2d");
    drawFunc(ctx);
    this.image = new Image();
    this.image.src = canvas.toDataURL("image/png");
    this.width = width;
    this.height = height;
}

function Player(x, y, direction) {
    this.x = x;
    this.y = y;
    this.direction = direction;
    this.paces = 0;
}

Player.prototype.rotate = function(angle) {
    this.direction = (this.direction + angle + CIRCLE) % (CIRCLE);
};

Player.prototype.walk = function(distance, map) {
    var dx = Math.cos(this.direction) * distance;
    var dy = Math.sin(this.direction) * distance;
    if (map.get(this.x + dx, this.y) <= 0)
        this.x += dx;
    if (map.get(this.x, this.y + dy) <= 0)
        this.y += dy;
    this.paces += distance;
};

Player.prototype.update = function(controls, map, seconds) {
    if (controls.left)
        this.rotate(-Math.PI * seconds);
    if (controls.right)
        this.rotate(Math.PI * seconds);
    if (controls.forward)
        this.walk(3 * seconds, map);
    if (controls.backward)
        this.walk(-3 * seconds, map);
};

function Map(size, skybox, wallTexture) {
    this.size = size;
    this.wallGrid = new Uint8Array(size * size);
    this.skybox = skybox;
    this.wallTexture = wallTexture;
    this.light = 0;
};

Map.prototype.get = function(x, y) {
    x = Math.floor(x);
    y = Math.floor(y);
    if (x < 0 || x > this.size - 1 || y < 0 || y > this.size - 1)
        return -1;
    return this.wallGrid[y * this.size + x];
};

Map.prototype.randomize = function() {
    for (var i = 0; i < this.size * this.size; i++) {
        this.wallGrid[i] = Math.random() < 0.3 ? 1 : 0;
    }
};

Map.prototype.cast = function(point, angle, range) {
    var self = this;
    var sin = Math.sin(angle);
    var cos = Math.cos(angle);
    var noWall = { length2: Infinity };

    return ray({ x: point.x, y: point.y, height: 0, distance: 0 });

    function ray(origin) {
        var stepX = step(sin, cos, origin.x, origin.y);
        var stepY = step(cos, sin, origin.y, origin.x, true);
        var nextStep = stepX.length2 < stepY.length2
            ? inspect(stepX, 1, 0, origin.distance, stepX.y)
            : inspect(stepY, 0, 1, origin.distance, stepY.x);

        if (nextStep.distance > range)
            return [origin];
        return [origin].concat(ray(nextStep));
    }

    function step(rise, run, x, y, inverted) {
        if (run === 0)
            return noWall;
        var dx = run > 0 ? Math.floor(x + 1) - x : Math.ceil(x - 1) - x;
        var dy = dx * (rise / run);
        return {
            x: inverted ? y + dy : x + dx,
            y: inverted ? x + dx : y + dy,
            length2: dx * dx + dy * dy
        };
    }

    function inspect(step, shiftX, shiftY, distance, offset) {
        var dx = cos < 0 ? shiftX : 0;
        var dy = sin < 0 ? shiftY : 0;
        step.height = self.get(step.x - dx, step.y - dy);
        step.distance = distance + Math.sqrt(step.length2);
        if (shiftX)
            step.shading = cos < 0 ? 2 : 0;
        else
            step.shading = sin < 0 ? 2 : 1;
        step.offset = offset - Math.floor(offset);
        return step;
    }
};

Map.prototype.update = function(seconds) {
    if (this.light > 0)
        this.light = Math.max(this.light - 10 * seconds, 0);
};

function Camera(canvas, resolution, focalLength) {
    this.ctx = canvas.getContext('2d');
    this.width = canvas.width = window.innerWidth * 0.5;
    this.height = canvas.height = window.innerHeight * 0.5;
    this.resolution = resolution;
    this.spacing = this.width / resolution;
    this.focalLength = focalLength || 0.8;
    this.range = MOBILE ? 8 : 14;
    this.lightRange = 5;
    this.scale = (this.width + this.height) / 1200;
}

Camera.prototype.render = function(player, map) {
    this.drawSky(player.direction, map.skybox, map.light);
    this.drawColumns(player, map);
};

Camera.prototype.drawSky = function(direction, sky, ambient) {
    var width = sky.width * (this.height / sky.height) * 2;
    var left = (direction / CIRCLE) * -width;

    this.ctx.save();
    this.ctx.drawImage(sky.image, left, 0, width, this.height);
    if (left < width - this.width) {
        this.ctx.drawImage(sky.image, left + width, 0, width, this.height);
    }
    if (ambient > 0) {
        this.ctx.fillStyle = '#ffffff';
        this.ctx.globalAlpha = ambient * 0.1;
        this.ctx.fillRect(0, this.height * 0.5, this.width, this.height * 0.5);
    }
    this.ctx.restore();
};

Camera.prototype.drawColumns = function(player, map) {
    this.ctx.save();
    for (var column = 0; column < this.resolution; column++) {
        var x = column / this.resolution - 0.5;
        var angle = Math.atan2(x, this.focalLength);
        var ray = map.cast(player, player.direction + angle, this.range);
        this.drawColumn(column, ray, angle, map);
    }
    this.ctx.restore();
};

Camera.prototype.drawColumn = function(column, ray, angle, map) {
    var ctx = this.ctx;
    var texture = map.wallTexture;
    var left = Math.floor(column * this.spacing);
    var width = Math.ceil(this.spacing);
    var hit = -1;

    while (++hit < ray.length && ray[hit].height <= 0);

    for (var s = ray.length - 1; s >= 0; s--) {
        var step = ray[s];

        if (s === hit) {
            var textureX = Math.floor(texture.width * step.offset);
            var wall = this.project(step.height, angle, step.distance);

            ctx.globalAlpha = 1;
            ctx.drawImage(texture.image, textureX, 0, 1, texture.height,
                left, wall.top, width, wall.height);

            ctx.fillStyle = '#000000';
            ctx.globalAlpha = Math.max((step.distance + step.shading) /
                this.lightRange - map.light, 0);
            ctx.fillRect(left, wall.top, width, wall.height);
        }
    }
};


Camera.prototype.project = function(height, angle, distance) {
    var z = distance * Math.cos(angle);
    var wallHeight = this.height * height / z;
    var bottom = this.height / 2 * (1 + 1 / z);
    return {
        top: bottom - wallHeight,
        height: wallHeight
    };
};

function GameLoop() {
    this.frame = this.frame.bind(this);
    this.lastTime = 0;
    this.callback = function() {};
}

GameLoop.prototype.start = function(callback) {
    this.callback = callback;
    requestAnimationFrame(this.frame);
};

GameLoop.prototype.frame = function(time) {
  var seconds = (time - this.lastTime) / 1000;
  this.lastTime = time;
  if (seconds < 0.2) this.callback(seconds);
  requestAnimationFrame(this.frame);
};

var drawChicken = function(ctx) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(0,0);
    ctx.lineTo(512,0);
    ctx.lineTo(512,512);
    ctx.lineTo(0,512);
    ctx.closePath();
    ctx.clip();
    ctx.translate(0,0);
    ctx.translate(0,0);
    ctx.scale(1,1);
    ctx.translate(0,0);
    ctx.strokeStyle = 'rgba(0,0,0,0)';
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;
    ctx.save();
    ctx.fillStyle = "#fefefe";
    ctx.beginPath();
    ctx.moveTo(0,256);
    ctx.lineTo(0,0);
    ctx.lineTo(256,0);
    ctx.lineTo(512,0);
    ctx.lineTo(512,256);
    ctx.lineTo(512,512);
    ctx.lineTo(256,512);
    ctx.lineTo(0,512);
    ctx.lineTo(0,256);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#e6f3d8";
    ctx.beginPath();
    ctx.moveTo(83.2,477.3);
    ctx.bezierCurveTo(77.4,474.90000000000003,76.9,474.5,77.4,472.1);
    ctx.bezierCurveTo(77.7,470.70000000000005,78.80000000000001,465.20000000000005,80,460);
    ctx.bezierCurveTo(82.1,450.3,83.8,431.3,82.8,428.7);
    ctx.bezierCurveTo(82.3,427.5,80.7,427.8,73.1,430.4);
    ctx.bezierCurveTo(62.199999999999996,434.09999999999997,62.49999999999999,434.2,59.49999999999999,422.5);
    ctx.bezierCurveTo(57.29999999999999,413.8,57.099999999999994,414.1,65.89999999999999,411.3);
    ctx.bezierCurveTo(68.89999999999999,410.40000000000003,71.49999999999999,409,71.8,408.2);
    ctx.bezierCurveTo(72.1,407.4,69.5,404,65.7,400.09999999999997);
    ctx.bezierCurveTo(62,396.5,59,392.9,59,392.3);
    ctx.bezierCurveTo(59,390.4,70.1,379,72,379);
    ctx.bezierCurveTo(73.7,379,80.5,385.7,88.3,394.9);
    ctx.bezierCurveTo(92.8,400.2,93.39999999999999,400.2,105.6,392.5);
    ctx.bezierCurveTo(117.89999999999999,384.8,127.1,377.5,132.7,370.9);
    ctx.bezierCurveTo(133.29999999999998,370.2,135.7,367.9,138,365.79999999999995);
    ctx.bezierCurveTo(140.3,363.69999999999993,142.1,361.49999999999994,142.1,360.79999999999995);
    ctx.bezierCurveTo(142.1,360.09999999999997,139.29999999999998,357.29999999999995,135.9,354.59999999999997);
    ctx.bezierCurveTo(122.4,343.7,103.7,323.2,92,306.59999999999997);
    ctx.bezierCurveTo(82,292.4,68.6,268,61.5,251);
    ctx.bezierCurveTo(51.1,226.3,41.8,188,46.2,188);
    ctx.bezierCurveTo(47,188,52.1,187.3,57.6,186.5);
    ctx.bezierCurveTo(94.2,181,156,180.3,190.5,184.9);
    ctx.bezierCurveTo(195.9,185.6,198.1,185.5,196.9,184.6);
    ctx.bezierCurveTo(196.70000000000002,184.4,188.6,181.9,179,179);
    ctx.bezierCurveTo(169.4,176.1,155,171.7,147,169.2);
    ctx.lineTo(132.5,164.7);
    ctx.lineTo(114,165.29999999999998);
    ctx.bezierCurveTo(103.8,165.6,88.5,166.6,80,167.49999999999997);
    ctx.bezierCurveTo(71.5,168.39999999999998,61.8,169.19999999999996,58.5,169.29999999999998);
    ctx.lineTo(52.5,169.5);
    ctx.lineTo(48.3,161);
    ctx.bezierCurveTo(43.099999999999994,150.6,37.8,134.7,38.199999999999996,131.2);
    ctx.bezierCurveTo(38.49999999999999,128.6,38.699999999999996,128.5,46.5,128.2);
    ctx.bezierCurveTo(67.2,127.39999999999999,123.1,134.29999999999998,170.5,143.6);
    ctx.bezierCurveTo(203.1,150,228.6,156.6,246.3,163.2);
    ctx.bezierCurveTo(256.6,167.1,257.2,167.2,259,165.5);
    ctx.bezierCurveTo(260,164.6,261.2,162.4,261.6,160.8);
    ctx.bezierCurveTo(262,159.20000000000002,263.6,156.5,265.20000000000005,154.9);
    ctx.bezierCurveTo(268.6,151.4,268.6,151.4,266.20000000000005,141.4);
    ctx.bezierCurveTo(262.90000000000003,128.20000000000002,261.1,113.30000000000001,260.50000000000006,95.4);
    ctx.bezierCurveTo(260.1000000000001,83.10000000000001,260.20000000000005,78.10000000000001,261.00000000000006,77.60000000000001);
    ctx.bezierCurveTo(261.6000000000001,77.2,265.20000000000005,78.7,268.90000000000003,80.9);
    ctx.bezierCurveTo(277.70000000000005,86.10000000000001,284.20000000000005,87.9,294.40000000000003,88);
    ctx.bezierCurveTo(299.00000000000006,88.1,303.00000000000006,88.1,303.40000000000003,88.1);
    ctx.bezierCurveTo(303.8,88.1,303.50000000000006,85.89999999999999,302.70000000000005,83.3);
    ctx.bezierCurveTo(300.70000000000005,76.7,300.90000000000003,69.7,303.20000000000005,65.19999999999999);
    ctx.bezierCurveTo(306.90000000000003,57.89999999999999,318.50000000000006,49.09999999999999,333.80000000000007,41.89999999999999);
    ctx.bezierCurveTo(343.7,37.1,358.9,32,362.9,32);
    ctx.bezierCurveTo(365.9,32,366,32.1,365.9,36.8);
    ctx.bezierCurveTo(365.9,39.4,365.09999999999997,49.099999999999994,364.09999999999997,58.4);
    ctx.bezierCurveTo(363.09999999999997,67.6,362.59999999999997,75.4,362.9,75.6);
    ctx.bezierCurveTo(363.2,75.8,368.2,73.3,374,70);
    ctx.bezierCurveTo(379.8,66.7,386.9,63.2,389.8,62.1);
    ctx.bezierCurveTo(396.7,59.5,406.3,59.5,413,62);
    ctx.bezierCurveTo(420,64.7,428,70,428,71.9);
    ctx.bezierCurveTo(428,72.80000000000001,425.2,75.80000000000001,421.8,78.5);
    ctx.bezierCurveTo(411.40000000000003,86.8,400,98.2,395.90000000000003,104.3);
    ctx.bezierCurveTo(393.70000000000005,107.5,390.90000000000003,110.7,389.6,111.6);
    ctx.bezierCurveTo(388.3,112.5,386.70000000000005,114.5,386,116.1);
    ctx.bezierCurveTo(385.3,117.69999999999999,384.1,119.5,383.3,119.89999999999999);
    ctx.bezierCurveTo(382.2,120.49999999999999,383.8,121.89999999999999,389.6,125.1);
    ctx.bezierCurveTo(393.90000000000003,127.5,398.8,130.29999999999998,400.5,131.2);
    ctx.bezierCurveTo(402.2,132.2,405.2,133,407.1,133);
    ctx.bezierCurveTo(411.6,133,422.40000000000003,137.5,433.1,143.8);
    ctx.bezierCurveTo(460.90000000000003,160.20000000000002,474.5,169.9,473.90000000000003,172.8);
    ctx.bezierCurveTo(473.50000000000006,175.10000000000002,467.1,175.8,445.40000000000003,175.9);
    ctx.bezierCurveTo(435.90000000000003,176,428.00000000000006,176.4,427.70000000000005,176.9);
    ctx.bezierCurveTo(427.40000000000003,177.4,435.00000000000006,183.70000000000002,444.6,190.9);
    ctx.bezierCurveTo(460.8,203.1,463.70000000000005,205.9,461.1,207.5);
    ctx.bezierCurveTo(459.1,208.7,437.3,211.1,429.5,210.9);
    ctx.bezierCurveTo(422.7,210.8,416.4,211.6,409.2,213.6);
    ctx.bezierCurveTo(408.3,213.79999999999998,408.09999999999997,214.6,408.59999999999997,215.7);
    ctx.bezierCurveTo(412.09999999999997,224,412.49999999999994,226,412.49999999999994,238.39999999999998);
    ctx.bezierCurveTo(412.59999999999997,254.09999999999997,411.79999999999995,258.9,408.99999999999994,258.9);
    ctx.bezierCurveTo(407.9,259,407,258.7,407,258.2);
    ctx.bezierCurveTo(407,255,380.2,231.89999999999998,376.7,232);
    ctx.bezierCurveTo(376,232,374.5,233.3,373.3,234.9);
    ctx.lineTo(371.1,237.70000000000002);
    ctx.lineTo(379.20000000000005,250.10000000000002);
    ctx.bezierCurveTo(392.70000000000005,270.70000000000005,400.50000000000006,289.1,403.70000000000005,307.40000000000003);
    ctx.bezierCurveTo(405.6,318.3,405.00000000000006,336.6,402.50000000000006,344.90000000000003);
    ctx.bezierCurveTo(398.20000000000005,359.1,388.40000000000003,372.90000000000003,375.80000000000007,382.50000000000006);
    ctx.bezierCurveTo(367.50000000000006,388.70000000000005,347.80000000000007,398.30000000000007,337.4000000000001,401.00000000000006);
    ctx.bezierCurveTo(332.80000000000007,402.20000000000005,329.1000000000001,403.70000000000005,329.1000000000001,404.30000000000007);
    ctx.bezierCurveTo(329.1000000000001,405.9000000000001,339.00000000000006,417.70000000000005,340.9000000000001,418.4000000000001);
    ctx.bezierCurveTo(341.80000000000007,418.7000000000001,343.9000000000001,421.0000000000001,345.6000000000001,423.5000000000001);
    ctx.bezierCurveTo(347.30000000000007,426.0000000000001,352.1000000000001,430.7000000000001,356.30000000000007,434.0000000000001);
    ctx.lineTo(364.00000000000006,440.0000000000001);
    ctx.lineTo(373.00000000000006,433.60000000000014);
    ctx.bezierCurveTo(396.9,416.7,416.7,408,431.5,408);
    ctx.lineTo(437,408);
    ctx.lineTo(437,417.4);
    ctx.lineTo(437,426.79999999999995);
    ctx.lineTo(432.9,427.49999999999994);
    ctx.bezierCurveTo(429.4,428.09999999999997,416.4,432.19999999999993,410.79999999999995,434.49999999999994);
    ctx.bezierCurveTo(407.99999999999994,435.69999999999993,409.79999999999995,436.99999999999994,414.4,436.99999999999994);
    ctx.bezierCurveTo(421.7,436.99999999999994,439.5,439.8999999999999,440.9,441.29999999999995);
    ctx.bezierCurveTo(442,442.4,442,443.9,440.59999999999997,449.99999999999994);
    ctx.bezierCurveTo(439.7,454.09999999999997,438.4,457.99999999999994,437.79999999999995,458.59999999999997);
    ctx.bezierCurveTo(436.9,459.59999999999997,434.69999999999993,459.49999999999994,427.69999999999993,458.29999999999995);
    ctx.bezierCurveTo(415.99999999999994,456.4,396.49999999999994,455.49999999999994,392.69999999999993,456.59999999999997);
    ctx.bezierCurveTo(391.0999999999999,457.09999999999997,389.79999999999995,458.09999999999997,389.99999999999994,458.79999999999995);
    ctx.bezierCurveTo(390.49999999999994,460.99999999999994,381.8999999999999,474.79999999999995,379.8999999999999,474.79999999999995);
    ctx.bezierCurveTo(378.7,475,375.2,473.2,372,471);
    ctx.bezierCurveTo(368.8,468.8,365.7,467,365.1,467);
    ctx.bezierCurveTo(364.6,467,361.70000000000005,469.9,358.8,473.5);
    ctx.bezierCurveTo(355.90000000000003,477.1,352.8,480,352,480);
    ctx.bezierCurveTo(349.8,480,337,471,337,469.5);
    ctx.bezierCurveTo(337,468.1,343.6,459.4,346.3,457.1);
    ctx.bezierCurveTo(347.2,456.3,348,455.20000000000005,348,454.5);
    ctx.bezierCurveTo(348,453.4,327.6,437.1,314.4,427.6);
    ctx.bezierCurveTo(310.79999999999995,425.1,308.5,422.3,306.59999999999997,418.70000000000005);
    ctx.bezierCurveTo(305.2,415.80000000000007,302.9,412.1,301.49999999999994,410.50000000000006);
    ctx.lineTo(298.99999999999994,407.50000000000006);
    ctx.lineTo(278.69999999999993,406.90000000000003);
    ctx.bezierCurveTo(235.5,405.5,202.1,396.4,167.5,376.5);
    ctx.bezierCurveTo(160.3,372.3,159.4,372.1,158.5,373.6);
    ctx.bezierCurveTo(158,374.6,156.2,376.8,154.5,378.5);
    ctx.bezierCurveTo(152.9,380.3,150.8,382.5,149.9,383.6);
    ctx.bezierCurveTo(143.6,390.90000000000003,127.10000000000001,403.8,114.80000000000001,411.1);
    ctx.bezierCurveTo(110.00000000000001,414,106.10000000000001,416.70000000000005,106.10000000000001,417.1);
    ctx.bezierCurveTo(106.10000000000001,417.6,109.30000000000001,423.20000000000005,113.2,429.70000000000005);
    ctx.bezierCurveTo(122.3,444.70000000000005,131.5,463.50000000000006,130.6,465.00000000000006);
    ctx.bezierCurveTo(129.8,466.2,115.7,473,114.1,473);
    ctx.bezierCurveTo(113.6,473,111,468.3,108.1,462.5);
    ctx.bezierCurveTo(103.19999999999999,452.4,101,450.3,101,455.6);
    ctx.bezierCurveTo(101,458.5,98.4,472.1,96.9,476.70000000000005);
    ctx.bezierCurveTo(96,479.50000000000006,95.4,479.90000000000003,92.7,479.90000000000003);
    ctx.bezierCurveTo(91,479.90000000000003,86.7,478.70000000000005,83.2,477.3);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#cee8b1";
    ctx.beginPath();
    ctx.moveTo(86,477.3);
    ctx.bezierCurveTo(82.4,476,79.2,474.5,78.7,474.1);
    ctx.bezierCurveTo(78.3,473.70000000000005,78.9,468.6,80,462.90000000000003);
    ctx.bezierCurveTo(82.7,449.6,84,425.50000000000006,81.9,426.3);
    ctx.bezierCurveTo(72.10000000000001,430.2,64.80000000000001,432.1,63.60000000000001,431.1);
    ctx.bezierCurveTo(62.00000000000001,429.70000000000005,58.60000000000001,417.5,59.30000000000001,415.6);
    ctx.bezierCurveTo(59.60000000000001,414.8,62.80000000000001,413.20000000000005,66.4,412);
    ctx.bezierCurveTo(70,410.8,73.2,409.4,73.5,408.9);
    ctx.bezierCurveTo(73.8,408.4,70.9,404.7,67,400.7);
    ctx.bezierCurveTo(63.2,396.6,60,392.9,60,392.3);
    ctx.bezierCurveTo(60,390.4,70.1,380,72,380);
    ctx.bezierCurveTo(73.7,380,79.5,385.6,87.7,395.4);
    ctx.bezierCurveTo(91.10000000000001,399.4,92.2,400.2,94.2,399.7);
    ctx.bezierCurveTo(97.10000000000001,399,112.5,389.4,119.7,383.9);
    ctx.bezierCurveTo(126.8,378.4,143,362.2,143,360.6);
    ctx.bezierCurveTo(143,359.90000000000003,140,356.90000000000003,136.3,353.90000000000003);
    ctx.bezierCurveTo(101.7,325.9,70.9,279,54.7,229.8);
    ctx.bezierCurveTo(51.3,219.7,46.9,202.8,45.6,194.8);
    ctx.bezierCurveTo(44.9,191.1,46.7,188,49.4,188);
    ctx.bezierCurveTo(50.1,188,55.199999999999996,187.3,60.8,186.5);
    ctx.bezierCurveTo(99.1,180.8,151.89999999999998,180.4,192.39999999999998,185.6);
    ctx.bezierCurveTo(198.89999999999998,186.4,204.49999999999997,186.9,204.7,186.6);
    ctx.bezierCurveTo(205,186.29999999999998,203,185.5,200.29999999999998,184.7);
    ctx.bezierCurveTo(197.7,183.9,182.7,179.2,167,174.4);
    ctx.lineTo(138.5,165.6);
    ctx.lineTo(125.5,165.29999999999998);
    ctx.bezierCurveTo(111.7,164.89999999999998,87.4,166.29999999999998,67.8,168.6);
    ctx.bezierCurveTo(61.3,169.4,55.199999999999996,169.7,54.4,169.4);
    ctx.bezierCurveTo(51.4,168.2,39,138.3,39,132);
    ctx.bezierCurveTo(39,130.4,39.7,128.9,40.6,128.6);
    ctx.bezierCurveTo(46.6,126.3,93.80000000000001,130.9,137,138);
    ctx.bezierCurveTo(177.4,144.6,218.7,154.3,240,162);
    ctx.bezierCurveTo(259.3,169,257.7,168.6,259.9,165.9);
    ctx.bezierCurveTo(261,164.6,262.2,162.3,262.5,160.8);
    ctx.bezierCurveTo(262.8,159.3,264.5,156.70000000000002,266.1,155);
    ctx.bezierCurveTo(269.5,151.5,269.5,151.6,266.1,138.5);
    ctx.bezierCurveTo(265,134.1,263.3,125.8,262.5,120);
    ctx.bezierCurveTo(260.6,107.1,259.5,81,260.8,79.1);
    ctx.bezierCurveTo(261.6,78,263.1,78.5,268.6,81.8);
    ctx.bezierCurveTo(272.40000000000003,84,277.5,86.3,280,86.89999999999999);
    ctx.bezierCurveTo(283.9,87.8,305,89.3,305,88.69999999999999);
    ctx.bezierCurveTo(305,88.6,304.1,85.6,303,82);
    ctx.bezierCurveTo(300.4,73.6,300.5,71.9,303.4,66.2);
    ctx.bezierCurveTo(308.9,55.300000000000004,326.7,44.1,351.9,35.7);
    ctx.bezierCurveTo(362.4,32.2,364.29999999999995,32,365.4,34.800000000000004);
    ctx.bezierCurveTo(365.7,35.6,365.09999999999997,45.300000000000004,363.9,56.300000000000004);
    ctx.bezierCurveTo(362.79999999999995,67.30000000000001,362.09999999999997,76.5,362.29999999999995,76.80000000000001);
    ctx.bezierCurveTo(362.59999999999997,77.10000000000001,366.79999999999995,75.00000000000001,371.69999999999993,72.20000000000002);
    ctx.bezierCurveTo(392.29999999999995,60.40000000000002,399.99999999999994,58.40000000000002,410.29999999999995,62.000000000000014);
    ctx.bezierCurveTo(417.99999999999994,64.70000000000002,426.9,70.10000000000001,426.79999999999995,72.10000000000001);
    ctx.bezierCurveTo(426.79999999999995,72.9,424.49999999999994,75.4,421.59999999999997,77.60000000000001);
    ctx.bezierCurveTo(413.29999999999995,84.10000000000001,398.9,98.10000000000001,395.49999999999994,103);
    ctx.bezierCurveTo(393.79999999999995,105.5,390.79999999999995,109.2,388.79999999999995,111.2);
    ctx.bezierCurveTo(384.79999999999995,115.3,380.4,121.10000000000001,380.9,121.5);
    ctx.bezierCurveTo(381.09999999999997,121.7,384.4,123.5,388.29999999999995,125.6);
    ctx.bezierCurveTo(392.19999999999993,127.69999999999999,396.49999999999994,130.29999999999998,397.99999999999994,131.29999999999998);
    ctx.bezierCurveTo(399.49999999999994,132.39999999999998,402.3999999999999,133.1,404.69999999999993,133.1);
    ctx.bezierCurveTo(409.99999999999994,133.1,416.79999999999995,136.1,435.49999999999994,146.5);
    ctx.bezierCurveTo(445.99999999999994,152.4,464.8999999999999,164.7,469.79999999999995,168.9);
    ctx.bezierCurveTo(473.09999999999997,171.70000000000002,473.19999999999993,172,471.59999999999997,173.6);
    ctx.bezierCurveTo(470.09999999999997,175.1,466.9,175.4,446.79999999999995,175.9);
    ctx.lineTo(423.69999999999993,176.5);
    ctx.lineTo(442.19999999999993,190.4);
    ctx.bezierCurveTo(452.7,198,461,204.8,461,205.5);
    ctx.bezierCurveTo(461,207.3,459.3,207.8,445.7,209.6);
    ctx.bezierCurveTo(438.3,210.6,431,210.9,427,210.6);
    ctx.bezierCurveTo(421.1,210,409,211.79999999999998,407.3,213.4);
    ctx.bezierCurveTo(407,213.70000000000002,407.7,216.1,408.8,218.70000000000002);
    ctx.bezierCurveTo(412,226.10000000000002,413.40000000000003,235.20000000000002,412.7,243.8);
    ctx.bezierCurveTo(412.09999999999997,251.4,410.5,258,409.09999999999997,258);
    ctx.bezierCurveTo(408.7,258,406.09999999999997,255.3,403.2,252.1);
    ctx.bezierCurveTo(398,246.1,378.9,231,376.7,231);
    ctx.bezierCurveTo(376,231,374.3,232.5,372.8,234.3);
    ctx.bezierCurveTo(369.7,238.20000000000002,369.3,237,379.2,252);
    ctx.bezierCurveTo(396.09999999999997,277.6,406,307.1,404.59999999999997,327.6);
    ctx.bezierCurveTo(403.79999999999995,338.6,402.4,344,397.49999999999994,354.5);
    ctx.bezierCurveTo(389.49999999999994,371.6,379.19999999999993,381.4,358.49999999999994,391.6);
    ctx.bezierCurveTo(351.3999999999999,395.1,341.69999999999993,399.1,336.99999999999994,400.40000000000003);
    ctx.bezierCurveTo(332.19999999999993,401.8,328.3999999999999,403.40000000000003,328.19999999999993,404.20000000000005);
    ctx.bezierCurveTo(327.8999999999999,405.70000000000005,338.5999999999999,419.1,340.0999999999999,419.1);
    ctx.bezierCurveTo(340.5999999999999,419.1,342.5999999999999,421.3,344.5999999999999,424);
    ctx.bezierCurveTo(346.4999999999999,426.7,351.69999999999993,431.6,356.0999999999999,434.9);
    ctx.lineTo(364.0999999999999,440.9);
    ctx.lineTo(372.9999999999999,434.59999999999997);
    ctx.bezierCurveTo(390.6999999999999,422.09999999999997,409.39999999999986,412.59999999999997,422.2999999999999,409.49999999999994);
    ctx.bezierCurveTo(434.6999999999999,406.59999999999997,436.9999999999999,407.79999999999995,436.8999999999999,417.29999999999995);
    ctx.bezierCurveTo(436.8999999999999,420.69999999999993,436.49999999999994,424.09999999999997,436.0999999999999,424.79999999999995);
    ctx.bezierCurveTo(435.5999999999999,425.49999999999994,431.8999999999999,426.9,427.8999999999999,427.99999999999994);
    ctx.bezierCurveTo(419.2999999999999,430.19999999999993,410.0999999999999,433.49999999999994,407.49999999999994,435.3999999999999);
    ctx.bezierCurveTo(405.8999999999999,436.5999999999999,406.69999999999993,436.7999999999999,414.09999999999997,437.3999999999999);
    ctx.bezierCurveTo(426.2,438.2999999999999,437.7,440.19999999999993,439.59999999999997,441.5999999999999);
    ctx.bezierCurveTo(441.09999999999997,442.69999999999993,441.09999999999997,443.4999999999999,439.9,449.5999999999999);
    ctx.bezierCurveTo(437.9,459.5999999999999,437.79999999999995,459.69999999999993,428.4,458.2999999999999);
    ctx.bezierCurveTo(417.7,456.6999999999999,397.5,455.7999999999999,391.59999999999997,456.5999999999999);
    ctx.bezierCurveTo(387.59999999999997,457.19999999999993,386.99999999999994,457.5999999999999,387.99999999999994,458.69999999999993);
    ctx.bezierCurveTo(388.8999999999999,459.79999999999995,388.29999999999995,461.49999999999994,384.99999999999994,467.0999999999999);
    ctx.bezierCurveTo(382.69999999999993,470.9999999999999,380.19999999999993,474.0999999999999,379.29999999999995,474.0999999999999);
    ctx.bezierCurveTo(378.49999999999994,474.0999999999999,375.09999999999997,472.2999999999999,371.9,470.0999999999999);
    ctx.bezierCurveTo(368.7,467.8999999999999,365.59999999999997,466.0999999999999,365,466.0999999999999);
    ctx.bezierCurveTo(364.5,466.0999999999999,361.6,468.9999999999999,358.7,472.4999999999999);
    ctx.bezierCurveTo(355.8,475.9999999999999,352.8,478.9999999999999,352,478.9999999999999);
    ctx.bezierCurveTo(350.3,479.0999999999999,341.9,473.7999999999999,339.4,471.0999999999999);
    ctx.bezierCurveTo(337.7,469.19999999999993,337.7,468.9999999999999,340.29999999999995,465.2999999999999);
    ctx.bezierCurveTo(341.79999999999995,463.1999999999999,344.29999999999995,460.1999999999999,345.9,458.5999999999999);
    ctx.bezierCurveTo(347.5,456.9999999999999,348.9,455.19999999999993,348.9,454.4999999999999);
    ctx.bezierCurveTo(348.9,453.2999999999999,329,437.2999999999999,315.29999999999995,427.5999999999999);
    ctx.bezierCurveTo(311.29999999999995,424.69999999999993,308.69999999999993,422.0999999999999,307.99999999999994,420.0999999999999);
    ctx.bezierCurveTo(307.3999999999999,418.3999999999999,305.3999999999999,414.8999999999999,303.3999999999999,412.2999999999999);
    ctx.lineTo(299.8999999999999,407.4999999999999);
    ctx.lineTo(280.0999999999999,406.89999999999986);
    ctx.bezierCurveTo(238.6,405.5,205.3,396.4,168.3,376);
    ctx.lineTo(159.10000000000002,370.9);
    ctx.lineTo(157.3,373.7);
    ctx.bezierCurveTo(154.70000000000002,377.8,137.4,394.4,130,400.09999999999997);
    ctx.bezierCurveTo(126.4,402.79999999999995,119.5,407.29999999999995,114.6,410.2);
    ctx.bezierCurveTo(109.69999999999999,413.09999999999997,105.5,416,105.3,416.7);
    ctx.bezierCurveTo(105,417.4,107.39999999999999,422.09999999999997,110.6,427.2);
    ctx.bezierCurveTo(116.5,436.8,130,462.4,130,464.09999999999997);
    ctx.bezierCurveTo(130,465.29999999999995,115,472.29999999999995,114.1,471.4);
    ctx.bezierCurveTo(113.8,471.09999999999997,111.19999999999999,466.5,108.5,461.2);
    ctx.bezierCurveTo(103.4,451.4,101,448.8,101,453.09999999999997);
    ctx.bezierCurveTo(101,455.99999999999994,97.5,472.59999999999997,96.2,475.99999999999994);
    ctx.bezierCurveTo(94.8,479.79999999999995,93.3,479.8999999999999,86,477.19999999999993);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#b6dd8a";
    ctx.beginPath();
    ctx.moveTo(85.6,476.6);
    ctx.bezierCurveTo(82.3,475.3,79.5,473.90000000000003,79.3,473.3);
    ctx.bezierCurveTo(79.1,472.7,79.89999999999999,467.6,81.1,461.90000000000003);
    ctx.bezierCurveTo(83.19999999999999,451.6,84.89999999999999,429.50000000000006,83.8,426.70000000000005);
    ctx.bezierCurveTo(83.3,425.50000000000006,81.89999999999999,425.70000000000005,74.7,428.20000000000005);
    ctx.bezierCurveTo(70,429.80000000000007,65.5,430.90000000000003,64.7,430.6);
    ctx.bezierCurveTo(63.1,430.1,60,420.9,60,417.1);
    ctx.bezierCurveTo(60,415.90000000000003,60.6,414.8,61.3,414.5);
    ctx.bezierCurveTo(71,411.1,74.1,409.7,74.1,408.3);
    ctx.bezierCurveTo(74.1,407.5,71.19999999999999,403.7,67.6,400);
    ctx.bezierCurveTo(63.9,396.4,61,392.8,61,392.1);
    ctx.bezierCurveTo(61,390.2,70.1,381,72,381);
    ctx.bezierCurveTo(73.7,381,79.5,386.7,87.7,396.5);
    ctx.lineTo(91.9,401.5);
    ctx.lineTo(96.7,399.2);
    ctx.bezierCurveTo(111.9,391.8,136.2,372.4,142.8,362.3);
    ctx.bezierCurveTo(144.3,360,144.3,359.8,141.9,357.90000000000003);
    ctx.bezierCurveTo(124.1,343.6,106.1,324.4,92.9,305.5);
    ctx.bezierCurveTo(71.9,275.6,53.9,233.9,47.5,200.2);
    ctx.bezierCurveTo(46.4,194.7,46.1,190.6,46.6,190.1);
    ctx.bezierCurveTo(47.9,188.9,67,186.29999999999998,86.9,184.5);
    ctx.bezierCurveTo(106.2,182.8,151.8,182.6,169.5,184.1);
    ctx.bezierCurveTo(182.4,185.2,204.1,187.79999999999998,207.8,188.7);
    ctx.bezierCurveTo(209.10000000000002,189,210.10000000000002,188.79999999999998,210.10000000000002,188.2);
    ctx.bezierCurveTo(210.10000000000002,187.2,203.60000000000002,185,159.60000000000002,171.39999999999998);
    ctx.bezierCurveTo(138.40000000000003,164.79999999999998,137.20000000000002,164.59999999999997,125.60000000000002,164.2);
    ctx.bezierCurveTo(112.60000000000002,163.79999999999998,89.00000000000003,165.2,68.90000000000002,167.5);
    ctx.bezierCurveTo(61.90000000000002,168.3,55.50000000000002,168.7,54.60000000000002,168.4);
    ctx.bezierCurveTo(52.50000000000002,167.6,46.700000000000024,155.3,42.40000000000002,142.3);
    ctx.bezierCurveTo(39.60000000000002,134,39.10000000000002,131.5,40.10000000000002,130.4);
    ctx.bezierCurveTo(42.200000000000024,127.9,62.90000000000002,128.8,96.50000000000003,133);
    ctx.bezierCurveTo(156.70000000000005,140.5,214.40000000000003,152.8,247.00000000000003,165);
    ctx.bezierCurveTo(259.6,169.7,259.1,169.8,263,161.1);
    ctx.bezierCurveTo(264.1,158.7,265.9,156,267.1,155);
    ctx.bezierCurveTo(269.8,152.8,269.8,149.5,267.20000000000005,139.4);
    ctx.bezierCurveTo(264.00000000000006,127.4,262.00000000000006,112.10000000000001,261.30000000000007,95.30000000000001);
    ctx.bezierCurveTo(260.9000000000001,84.80000000000001,261.00000000000006,80.00000000000001,261.80000000000007,79.50000000000001);
    ctx.bezierCurveTo(262.4000000000001,79.10000000000001,265.1000000000001,80.20000000000002,267.80000000000007,81.80000000000001);
    ctx.bezierCurveTo(276.30000000000007,87.00000000000001,279.9000000000001,88.10000000000001,292.50000000000006,88.9);
    ctx.bezierCurveTo(299.1000000000001,89.30000000000001,304.80000000000007,89.5,305.20000000000005,89.30000000000001);
    ctx.bezierCurveTo(305.6,89.10000000000001,305.00000000000006,86.10000000000001,304.00000000000006,82.60000000000001);
    ctx.bezierCurveTo(303.00000000000006,79.2,302.1000000000001,74.9,302.1000000000001,73.10000000000001);
    ctx.bezierCurveTo(302.1000000000001,60.400000000000006,323.50000000000006,45.00000000000001,354.7000000000001,35.30000000000001);
    ctx.bezierCurveTo(360.7000000000001,33.40000000000001,363.6000000000001,32.90000000000001,364.3000000000001,33.70000000000001);
    ctx.bezierCurveTo(365.0000000000001,34.40000000000001,364.7000000000001,40.90000000000001,363.2000000000001,55.500000000000014);
    ctx.bezierCurveTo(362.0000000000001,66.90000000000002,361.4000000000001,76.60000000000002,361.8000000000001,77.00000000000001);
    ctx.bezierCurveTo(362.2000000000001,77.40000000000002,368.0000000000001,74.70000000000002,374.7000000000001,71.00000000000001);
    ctx.bezierCurveTo(393.1000000000001,60.80000000000001,400.4000000000001,59.100000000000016,410.8000000000001,62.500000000000014);
    ctx.bezierCurveTo(417.40000000000015,64.70000000000002,426.10000000000014,70.00000000000001,426.0000000000001,71.90000000000002);
    ctx.bezierCurveTo(426.0000000000001,72.70000000000002,423.4000000000001,75.50000000000001,420.3000000000001,77.90000000000002);
    ctx.bezierCurveTo(411.5000000000001,84.90000000000002,399.10000000000014,96.90000000000002,395.7000000000001,101.90000000000002);
    ctx.bezierCurveTo(394.0000000000001,104.40000000000002,391.0000000000001,108.00000000000001,389.1000000000001,110.00000000000001);
    ctx.bezierCurveTo(384.4000000000001,114.80000000000001,380.1000000000001,120.00000000000001,380.1000000000001,120.90000000000002);
    ctx.bezierCurveTo(380.1000000000001,121.30000000000003,381.30000000000007,122.20000000000002,382.9000000000001,122.90000000000002);
    ctx.bezierCurveTo(384.4000000000001,123.60000000000002,389.30000000000007,126.40000000000002,393.9000000000001,129.10000000000002);
    ctx.bezierCurveTo(399.4000000000001,132.40000000000003,403.2000000000001,134.00000000000003,405.4000000000001,134.00000000000003);
    ctx.bezierCurveTo(408.9000000000001,134.00000000000003,424.30000000000007,139.90000000000003,427.0000000000001,142.40000000000003);
    ctx.bezierCurveTo(427.9000000000001,143.20000000000005,432.0000000000001,145.50000000000003,436.10000000000014,147.60000000000002);
    ctx.bezierCurveTo(444.20000000000016,151.60000000000002,463.40000000000015,164.10000000000002,469.10000000000014,168.90000000000003);
    ctx.bezierCurveTo(475.0000000000001,174.00000000000003,473.3000000000001,174.40000000000003,446.60000000000014,174.90000000000003);
    ctx.bezierCurveTo(433.6,175.1,423,175.5,423,175.9);
    ctx.bezierCurveTo(423,176.3,431.3,182.8,441.5,190.4);
    ctx.bezierCurveTo(451.7,198,460,204.6,460,205.1);
    ctx.bezierCurveTo(460,206.6,458.1,207.1,446.3,208.7);
    ctx.bezierCurveTo(439.5,209.6,431.6,210,427.6,209.7);
    ctx.bezierCurveTo(418.6,209,405.6,211.6,406.40000000000003,214);
    ctx.bezierCurveTo(406.70000000000005,214.9,407.90000000000003,218.3,409.20000000000005,221.6);
    ctx.bezierCurveTo(411.1,226.7,411.50000000000006,229.5,411.50000000000006,240.1);
    ctx.bezierCurveTo(411.50000000000006,248.79999999999998,411.1000000000001,253.29999999999998,410.20000000000005,255);
    ctx.lineTo(408.80000000000007,257.4);
    ctx.lineTo(403.80000000000007,251.79999999999998);
    ctx.bezierCurveTo(399.4000000000001,246.7,380.80000000000007,231.79999999999998,377.30000000000007,230.39999999999998);
    ctx.bezierCurveTo(375.80000000000007,229.79999999999998,370.1000000000001,235.7,370.1000000000001,237.89999999999998);
    ctx.bezierCurveTo(370.1000000000001,238.59999999999997,373.7000000000001,244.7,378.2000000000001,251.39999999999998);
    ctx.bezierCurveTo(400.0000000000001,284.2,408.5000000000001,317.59999999999997,401.7000000000001,343.09999999999997);
    ctx.bezierCurveTo(397.8000000000001,357.59999999999997,387.9000000000001,371.79999999999995,374.9000000000001,381.7);
    ctx.bezierCurveTo(366.9000000000001,387.7,349.2000000000001,396.3,337.9000000000001,399.59999999999997);
    ctx.bezierCurveTo(324.80000000000007,403.4,325.1000000000001,402.7,332.1000000000001,411.4);
    ctx.bezierCurveTo(335.4000000000001,415.5,339.30000000000007,419.7,340.7000000000001,420.59999999999997);
    ctx.bezierCurveTo(342.1000000000001,421.49999999999994,343.9000000000001,423.49999999999994,344.7000000000001,425.09999999999997);
    ctx.bezierCurveTo(346.2000000000001,427.99999999999994,362.2000000000001,441.2,364.2000000000001,441.2);
    ctx.bezierCurveTo(364.8000000000001,441.2,369.0000000000001,438.5,373.5000000000001,435.3);
    ctx.bezierCurveTo(396.4000000000001,418.90000000000003,421.2000000000001,408.1,432.8000000000001,409.40000000000003);
    ctx.lineTo(435.5,409.5);
    ctx.lineTo(435.5,417.5);
    ctx.lineTo(435.5,425.5);
    ctx.lineTo(431.5,426.4);
    ctx.bezierCurveTo(420.4,428.79999999999995,405,435,405,437.09999999999997);
    ctx.bezierCurveTo(405,437.59999999999997,407.5,438.09999999999997,410.5,438.09999999999997);
    ctx.bezierCurveTo(417.7,438.09999999999997,438.3,440.99999999999994,439.5,442.2);
    ctx.bezierCurveTo(440.1,442.8,439.9,445.8,439,450.4);
    ctx.lineTo(437.5,457.7);
    ctx.lineTo(433.5,457.59999999999997);
    ctx.bezierCurveTo(431.3,457.59999999999997,424.2,456.9,417.6,456.2);
    ctx.bezierCurveTo(406.90000000000003,455,387.70000000000005,455.2,386.40000000000003,456.5);
    ctx.bezierCurveTo(386.1,456.8,386.50000000000006,457.9,387.1,458.9);
    ctx.bezierCurveTo(388.1,460.59999999999997,387.8,461.7,384.6,467);
    ctx.bezierCurveTo(382.6,470.4,380.5,473.4,380,473.6);
    ctx.bezierCurveTo(379.5,473.90000000000003,376.1,472.1,372.4,469.6);
    ctx.bezierCurveTo(368.8,467,365.4,465,364.9,465);
    ctx.bezierCurveTo(364.5,465,361.7,467.9,358.79999999999995,471.4);
    ctx.bezierCurveTo(355.59999999999997,475.29999999999995,352.69999999999993,477.9,351.49999999999994,477.9);
    ctx.bezierCurveTo(349.09999999999997,478,339.59999999999997,471,339.19999999999993,468.9);
    ctx.bezierCurveTo(338.99999999999994,468.09999999999997,341.3999999999999,464.59999999999997,344.3999999999999,461.29999999999995);
    ctx.bezierCurveTo(347.3999999999999,457.9,349.8999999999999,454.69999999999993,349.8999999999999,454.09999999999997);
    ctx.bezierCurveTo(349.8999999999999,453.09999999999997,328.8999999999999,436.4,316.2999999999999,427.29999999999995);
    ctx.bezierCurveTo(312.8999999999999,424.79999999999995,309.6999999999999,421.79999999999995,309.2999999999999,420.59999999999997);
    ctx.bezierCurveTo(308.0999999999999,416.59999999999997,300.5999999999999,406.9,298.4999999999999,406.4);
    ctx.bezierCurveTo(297.39999999999986,406.2,288.0999999999999,405.79999999999995,277.89999999999986,405.5);
    ctx.bezierCurveTo(250.29999999999987,404.8,225.89999999999986,400.1,201.29999999999987,390.9);
    ctx.bezierCurveTo(190.59999999999988,386.9,172.49999999999986,378.2,165.09999999999985,373.5);
    ctx.bezierCurveTo(160.09999999999985,370.3,158.39999999999986,370.2,156.89999999999986,373.2);
    ctx.bezierCurveTo(155.19999999999987,376.4,136.69999999999987,394.2,128.99999999999986,400);
    ctx.bezierCurveTo(125.39999999999986,402.7,118.49999999999986,407.2,113.59999999999985,410.1);
    ctx.bezierCurveTo(108.69999999999985,413,104.49999999999986,415.8,104.29999999999986,416.40000000000003);
    ctx.bezierCurveTo(104.09999999999985,417.00000000000006,106.69999999999986,422.00000000000006,110.09999999999985,427.40000000000003);
    ctx.bezierCurveTo(117.1,438.6,129,461.4,129,463.6);
    ctx.bezierCurveTo(129,464.9,117.4,471,115,471);
    ctx.bezierCurveTo(114.5,471,111.6,466.1,108.4,460);
    ctx.bezierCurveTo(105.30000000000001,454,102.30000000000001,449,101.9,449);
    ctx.bezierCurveTo(101,449,101,449.1,98.5,463);
    ctx.bezierCurveTo(96.6,473.8,94.7,479,92.8,478.9);
    ctx.bezierCurveTo(92.1,478.9,88.8,477.79999999999995,85.6,476.59999999999997);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#a6d671";
    ctx.beginPath();
    ctx.moveTo(85,475.6);
    ctx.bezierCurveTo(81.7,474.20000000000005,79.6,472.70000000000005,79.7,471.90000000000003);
    ctx.bezierCurveTo(79.8,471.1,80.8,466.20000000000005,82,461.00000000000006);
    ctx.bezierCurveTo(83.1,455.80000000000007,84.4,445.80000000000007,84.7,438.80000000000007);
    ctx.bezierCurveTo(85.3,427.9000000000001,85.10000000000001,426.00000000000006,83.8,425.50000000000006);
    ctx.bezierCurveTo(82.89999999999999,425.20000000000005,78.39999999999999,426.30000000000007,73.7,427.90000000000003);
    ctx.bezierCurveTo(67.3,430.20000000000005,64.9,430.6,64.3,429.70000000000005);
    ctx.bezierCurveTo(62.8,427.80000000000007,60,416.6,60.8,415.80000000000007);
    ctx.bezierCurveTo(61.199999999999996,415.4000000000001,64.5,414.00000000000006,68,412.80000000000007);
    ctx.bezierCurveTo(72,411.4000000000001,74.6,409.9000000000001,74.8,408.80000000000007);
    ctx.bezierCurveTo(75,407.80000000000007,72.39999999999999,404.20000000000005,68.6,400.20000000000005);
    ctx.bezierCurveTo(65,396.4,62,392.6,62,391.8);
    ctx.bezierCurveTo(62,391,64.3,388.2,67,385.40000000000003);
    ctx.lineTo(72,380.40000000000003);
    ctx.lineTo(77.7,386.40000000000003);
    ctx.bezierCurveTo(80.8,389.70000000000005,85.3,394.6,87.60000000000001,397.20000000000005);
    ctx.lineTo(91.80000000000001,402.00000000000006);
    ctx.lineTo(95.30000000000001,400.50000000000006);
    ctx.bezierCurveTo(105.50000000000001,396.20000000000005,125.70000000000002,381.30000000000007,137,369.50000000000006);
    ctx.bezierCurveTo(143.7,362.6000000000001,145.1,359.30000000000007,142.3,357.20000000000005);
    ctx.bezierCurveTo(130.7,348.8,110.2,327.6,98.3,311.8);
    ctx.bezierCurveTo(86.7,296.5,72,270.4,63.4,250);
    ctx.bezierCurveTo(54.6,228.9,44.4,190,47.7,190);
    ctx.bezierCurveTo(48.2,190,53.1,189.3,58.6,188.5);
    ctx.bezierCurveTo(97.7,182.6,153.4,182.3,195,187.7);
    ctx.bezierCurveTo(210.7,189.7,211.2,189.79999999999998,211.7,188.29999999999998);
    ctx.bezierCurveTo(212.1,187.1,206.2,185.1,158.5,170.29999999999998);
    ctx.lineTo(136.5,163.5);
    ctx.lineTo(116,163.6);
    ctx.bezierCurveTo(98.4,163.7,84.9,164.7,59.2,167.6);
    ctx.lineTo(53.900000000000006,168.2);
    ctx.lineTo(49.800000000000004,159.29999999999998);
    ctx.bezierCurveTo(45.6,150.2,40,134.4,40,131.6);
    ctx.bezierCurveTo(40,125.19999999999999,136.8,137.4,197.4,151.5);
    ctx.bezierCurveTo(218.70000000000002,156.5,235.2,161.3,247.8,166.2);
    ctx.bezierCurveTo(259.90000000000003,170.89999999999998,259.2,171.2,263.6,161.29999999999998);
    ctx.bezierCurveTo(264.90000000000003,158.39999999999998,266.5,156.1,267,156.1);
    ctx.bezierCurveTo(268.9,156.1,270.9,149.9,269.9,147.29999999999998);
    ctx.bezierCurveTo(268.5,143.49999999999997,266.09999999999997,132.49999999999997,264.5,121.59999999999998);
    ctx.bezierCurveTo(262.8,110.29999999999998,261.3,80.09999999999998,262.5,80.09999999999998);
    ctx.bezierCurveTo(262.9,80.09999999999998,265.8,81.59999999999998,268.9,83.49999999999999);
    ctx.bezierCurveTo(276.29999999999995,87.99999999999999,283.4,89.79999999999998,295.4,90.39999999999999);
    ctx.bezierCurveTo(306.79999999999995,90.89999999999999,307,90.8,304.7,82.8);
    ctx.bezierCurveTo(301.5,71.7,303.3,65.69999999999999,312.59999999999997,57.4);
    ctx.bezierCurveTo(321.4,49.6,347.9,36.9,360.29999999999995,34.599999999999994);
    ctx.bezierCurveTo(364.9,33.8,364.79999999999995,32.3,362.09999999999997,58.099999999999994);
    ctx.bezierCurveTo(360.99999999999994,68.19999999999999,360.4,76.89999999999999,360.7,77.39999999999999);
    ctx.bezierCurveTo(361.7,78.99999999999999,364.09999999999997,78.1,374.8,72.19999999999999);
    ctx.bezierCurveTo(390.1,63.69999999999999,395.1,61.999999999999986,403.3,62.39999999999999);
    ctx.bezierCurveTo(408.7,62.69999999999999,411.5,63.599999999999994,417.8,66.69999999999999);
    ctx.bezierCurveTo(422.1,68.89999999999999,425.6,71.19999999999999,425.6,71.79999999999998);
    ctx.bezierCurveTo(425.6,72.39999999999998,422.5,75.49999999999999,418.6,78.69999999999999);
    ctx.bezierCurveTo(408.1,87.1,399.2,95.9,395.7,101);
    ctx.bezierCurveTo(394,103.5,391,107.1,389,109.1);
    ctx.bezierCurveTo(382.7,115.6,379,119.9,379,120.8);
    ctx.bezierCurveTo(379,121.3,384.4,124.6,390.9,128.3);
    ctx.bezierCurveTo(400.09999999999997,133.5,403.7,135,406.79999999999995,135);
    ctx.bezierCurveTo(408.99999999999994,135,411.09999999999997,135.4,411.4,135.9);
    ctx.bezierCurveTo(411.7,136.4,414.4,137.5,417.29999999999995,138.4);
    ctx.bezierCurveTo(420.19999999999993,139.3,423.69999999999993,140.8,424.99999999999994,141.8);
    ctx.bezierCurveTo(426.29999999999995,142.8,431.49999999999994,145.8,436.3999999999999,148.5);
    ctx.bezierCurveTo(453.3999999999999,157.6,472.2999999999999,170.9,470.5999999999999,172.6);
    ctx.bezierCurveTo(470.19999999999993,173,459.5999999999999,173.6,447.0999999999999,173.79999999999998);
    ctx.bezierCurveTo(434.5999999999999,173.99999999999997,423.8999999999999,174.49999999999997,423.19999999999993,174.79999999999998);
    ctx.bezierCurveTo(422.49999999999994,175.2,422.29999999999995,175.89999999999998,422.69999999999993,176.49999999999997);
    ctx.bezierCurveTo(423.0999999999999,177.09999999999997,431.3999999999999,183.49999999999997,441.19999999999993,190.89999999999998);
    ctx.bezierCurveTo(450.99999999999994,198.2,458.99999999999994,204.49999999999997,458.99999999999994,204.99999999999997);
    ctx.bezierCurveTo(458.99999999999994,206.69999999999996,440.19999999999993,208.99999999999997,426.49999999999994,208.89999999999998);
    ctx.bezierCurveTo(417.59999999999997,208.79999999999998,407.09999999999997,210.59999999999997,405.19999999999993,212.39999999999998);
    ctx.bezierCurveTo(404.8999999999999,212.7,405.5999999999999,214.89999999999998,406.69999999999993,217.29999999999998);
    ctx.bezierCurveTo(409.99999999999994,224.1,411.29999999999995,232.89999999999998,410.69999999999993,244.1);
    ctx.bezierCurveTo(410.3999999999999,249.6,409.69999999999993,254.6,409.19999999999993,255.1);
    ctx.bezierCurveTo(408.69999999999993,255.6,406.5999999999999,254,404.0999999999999,251);
    ctx.bezierCurveTo(400.3999999999999,246.6,383.19999999999993,232.7,377.9999999999999,230);
    ctx.bezierCurveTo(376.39999999999986,229.1,375.4999999999999,229.6,372.4999999999999,232.7);
    ctx.bezierCurveTo(370.4999999999999,234.79999999999998,368.89999999999986,236.89999999999998,368.89999999999986,237.5);
    ctx.bezierCurveTo(368.89999999999986,238.1,372.29999999999984,243.7,376.4999999999999,250);
    ctx.bezierCurveTo(395.0999999999999,278.2,403.89999999999986,304.3,402.5999999999999,328);
    ctx.bezierCurveTo(401.5999999999999,347.3,395.4999999999999,360.8,381.8999999999999,374.1);
    ctx.bezierCurveTo(374.3999999999999,381.5,371.3999999999999,383.6,361.2999999999999,388.70000000000005);
    ctx.bezierCurveTo(349.3999999999999,394.70000000000005,342.4999999999999,397.50000000000006,331.6999999999999,400.40000000000003);
    ctx.bezierCurveTo(327.7999999999999,401.50000000000006,325.9999999999999,402.50000000000006,325.9999999999999,403.50000000000006);
    ctx.bezierCurveTo(325.9999999999999,405.20000000000005,337.6999999999999,419.90000000000003,339.0999999999999,419.90000000000003);
    ctx.bezierCurveTo(339.5999999999999,419.90000000000003,341.4999999999999,422.00000000000006,343.4999999999999,424.70000000000005);
    ctx.bezierCurveTo(346.7999999999999,429.1,362.1999999999999,442.00000000000006,364.0999999999999,442.00000000000006);
    ctx.bezierCurveTo(364.5999999999999,442.00000000000006,367.9999999999999,439.70000000000005,371.69999999999993,436.90000000000003);
    ctx.bezierCurveTo(384.79999999999995,427.1,403.79999999999995,416.8,416.49999999999994,412.50000000000006);
    ctx.bezierCurveTo(419.29999999999995,411.6000000000001,424.49999999999994,410.6000000000001,428.29999999999995,410.30000000000007);
    ctx.lineTo(435.09999999999997,409.70000000000005);
    ctx.lineTo(435.09999999999997,417.30000000000007);
    ctx.lineTo(435.09999999999997,424.9000000000001);
    ctx.lineTo(431.9,425.5000000000001);
    ctx.bezierCurveTo(425.9,426.7000000000001,410.7,432.0000000000001,407.29999999999995,434.0000000000001);
    ctx.bezierCurveTo(402.69999999999993,436.8000000000001,403.69999999999993,438.4000000000001,410.19999999999993,438.7000000000001);
    ctx.bezierCurveTo(415.79999999999995,439.0000000000001,430.0999999999999,440.6000000000001,435.8999999999999,441.6000000000001);
    ctx.bezierCurveTo(439.5999999999999,442.30000000000007,439.8999999999999,443.6000000000001,437.99999999999994,452.00000000000006);
    ctx.lineTo(436.79999999999995,457.20000000000005);
    ctx.lineTo(431.69999999999993,456.6);
    ctx.bezierCurveTo(428.8,456.4,421.8,455.6,416,454.9);
    ctx.bezierCurveTo(406,453.79999999999995,390.4,454.09999999999997,386.8,455.5);
    ctx.bezierCurveTo(385.40000000000003,456,385.3,456.6,386.2,458.5);
    ctx.bezierCurveTo(387.09999999999997,460.4,386.7,461.8,384.09999999999997,466.4);
    ctx.bezierCurveTo(382.29999999999995,469.5,380.49999999999994,472.2,379.9,472.59999999999997);
    ctx.bezierCurveTo(379.29999999999995,472.9,376.29999999999995,471.49999999999994,373.2,469.4);
    ctx.bezierCurveTo(370.09999999999997,467.29999999999995,366.9,465.2,366.2,464.7);
    ctx.bezierCurveTo(364.8,463.8,361.2,467.09999999999997,355.3,474.4);
    ctx.bezierCurveTo(352.2,478.2,352.2,478.2,349.2,476.7);
    ctx.bezierCurveTo(345,474.4,340,470.1,340,468.5);
    ctx.bezierCurveTo(340,467.8,342.5,464.4,345.5,461.1);
    ctx.bezierCurveTo(348.5,457.70000000000005,351,454.5,351,454);
    ctx.bezierCurveTo(351,453.1,336,441.1,319.8,429.1);
    ctx.bezierCurveTo(314.40000000000003,425.1,310.1,421.40000000000003,310.1,420.70000000000005);
    ctx.bezierCurveTo(310.1,418.30000000000007,301.6,407.00000000000006,299.1,406.1);
    ctx.bezierCurveTo(297.6,405.6,288,404.9,277.5,404.6);
    ctx.bezierCurveTo(235.2,403.5,205.9,395.1,163.2,371.9);
    ctx.lineTo(158.8,369.5);
    ctx.lineTo(157.2,372);
    ctx.bezierCurveTo(154.7,375.9,135.6,394.4,128.7,399.6);
    ctx.bezierCurveTo(125.29999999999998,402.20000000000005,118.29999999999998,406.70000000000005,113.29999999999998,409.70000000000005);
    ctx.bezierCurveTo(108.19999999999999,412.70000000000005,103.79999999999998,415.6,103.49999999999999,416.1);
    ctx.bezierCurveTo(103.19999999999999,416.6,105.49999999999999,421.20000000000005,108.59999999999998,426.3);
    ctx.bezierCurveTo(115.39999999999998,437.2,127.99999999999997,461.40000000000003,127.99999999999997,463.40000000000003);
    ctx.bezierCurveTo(127.99999999999997,464.70000000000005,115.39999999999998,470.90000000000003,114.59999999999997,470.00000000000006);
    ctx.bezierCurveTo(114.39999999999996,469.80000000000007,111.89999999999996,465.1000000000001,108.99999999999997,459.6000000000001);
    ctx.bezierCurveTo(106.19999999999997,454.1000000000001,103.39999999999998,449.2000000000001,102.89999999999998,448.7000000000001);
    ctx.bezierCurveTo(101.19999999999997,446.9000000000001,99.89999999999998,449.7000000000001,98.49999999999997,458.7000000000001);
    ctx.bezierCurveTo(96.09999999999997,473.5000000000001,94.79999999999997,477.6000000000001,92.49999999999997,477.9000000000001);
    ctx.bezierCurveTo(91.39999999999998,478.0000000000001,87.99999999999997,477.1000000000001,84.99999999999997,475.80000000000007);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#8dcb48";
    ctx.beginPath();
    ctx.moveTo(85.2,474.9);
    ctx.bezierCurveTo(81,473.29999999999995,80,472.5,80.5,471.09999999999997);
    ctx.bezierCurveTo(82.5,464.79999999999995,84.1,452.49999999999994,84.7,439.29999999999995);
    ctx.bezierCurveTo(85.2,426.29999999999995,85.10000000000001,424.09999999999997,83.9,424.09999999999997);
    ctx.bezierCurveTo(83.10000000000001,424.09999999999997,78.5,425.4,73.7,427.09999999999997);
    ctx.bezierCurveTo(67.4,429.2,64.8,429.7,64.5,428.9);
    ctx.bezierCurveTo(63.7,426.7,61.1,417.7,61.1,417.09999999999997);
    ctx.bezierCurveTo(61.1,416.79999999999995,64.5,415.29999999999995,68.6,413.7);
    ctx.bezierCurveTo(74.3,411.59999999999997,76.1,410.5,76.1,409.09999999999997);
    ctx.bezierCurveTo(76.1,408.09999999999997,73.19999999999999,404.09999999999997,69.6,400.29999999999995);
    ctx.bezierCurveTo(66,396.49999999999994,63.099999999999994,392.79999999999995,63.099999999999994,391.99999999999994);
    ctx.bezierCurveTo(63.099999999999994,391.19999999999993,65.1,388.59999999999997,67.6,386.19999999999993);
    ctx.lineTo(72.1,381.79999999999995);
    ctx.lineTo(75.69999999999999,385.29999999999995);
    ctx.bezierCurveTo(77.69999999999999,387.19999999999993,81.79999999999998,391.79999999999995,84.89999999999999,395.49999999999994);
    ctx.bezierCurveTo(88.1,399.29999999999995,91.3,402.29999999999995,92.39999999999999,402.29999999999995);
    ctx.bezierCurveTo(94.89999999999999,402.29999999999995,100.99999999999999,399.19999999999993,111.19999999999999,392.59999999999997);
    ctx.bezierCurveTo(127.1,382.29999999999995,145.2,365.2,145.2,360.29999999999995);
    ctx.bezierCurveTo(145.2,359.4,142.2,356.29999999999995,138.5,353.29999999999995);
    ctx.bezierCurveTo(134.8,350.29999999999995,127.5,343.59999999999997,122.2,338.29999999999995);
    ctx.bezierCurveTo(91.1,307.1,67.7,266.7,54.1,220.8);
    ctx.bezierCurveTo(50.2,207.5,46.8,191.7,47.8,190.9);
    ctx.bezierCurveTo(48.9,189.9,70.5,187.1,90,185.4);
    ctx.bezierCurveTo(122.6,182.5,174.5,184.3,204.5,189.5);
    ctx.bezierCurveTo(213,191,215.7,190.3,212.8,187.5);
    ctx.bezierCurveTo(211.3,186,201.10000000000002,182.7,155.20000000000002,168.7);
    ctx.lineTo(137,163);
    ctx.lineTo(122.4,163);
    ctx.bezierCurveTo(107,163,85.80000000000001,164.3,67.5,166.4);
    ctx.bezierCurveTo(61.5,167.1,55.9,167.5,55.3,167.20000000000002);
    ctx.bezierCurveTo(52.5,166.20000000000002,40.199999999999996,134.60000000000002,41.4,131.5);
    ctx.bezierCurveTo(42.4,128.8,61.3,129.8,98.5,134.6);
    ctx.bezierCurveTo(160.8,142.5,219.8,155.7,252.9,168.89999999999998);
    ctx.bezierCurveTo(259.3,171.49999999999997,259.8,171.2,263.7,163.2);
    ctx.bezierCurveTo(265.2,160.2,267.5,156.6,268.8,155.2);
    ctx.bezierCurveTo(271.6,152.39999999999998,271.5,150.1,268.2,137.39999999999998);
    ctx.bezierCurveTo(264.3,122.49999999999997,260.5,87.09999999999998,262.3,82.49999999999997);
    ctx.bezierCurveTo(262.8,81.09999999999997,264,81.49999999999997,270.6,84.99999999999997);
    ctx.bezierCurveTo(277.90000000000003,88.99999999999997,278.70000000000005,89.19999999999997,289.90000000000003,89.99999999999997);
    ctx.bezierCurveTo(306.8,91.2,307,91.2,307,89.4);
    ctx.bezierCurveTo(307,88.5,306,84.5,304.9,80.4);
    ctx.bezierCurveTo(302.79999999999995,73.30000000000001,302.79999999999995,72.9,304.5,68.5);
    ctx.bezierCurveTo(306.6,62.9,315.1,55,325.3,49.2);
    ctx.bezierCurveTo(335.8,43.2,362,33.5,363.6,35.1);
    ctx.bezierCurveTo(363.90000000000003,35.4,363.20000000000005,44.3,362.1,55);
    ctx.bezierCurveTo(359.6,78.7,359.6,79,361.6,79);
    ctx.bezierCurveTo(362.5,79,368.5,76.1,374.90000000000003,72.6);
    ctx.bezierCurveTo(386.7,66,396.8,62,401.5,62);
    ctx.bezierCurveTo(406.9,62,425.2,69.8,425,72);
    ctx.bezierCurveTo(425,72.3,422.4,74.5,419.3,77);
    ctx.bezierCurveTo(410.5,84,398.1,96,394.7,101);
    ctx.bezierCurveTo(393,103.5,390,107.1,388.09999999999997,109.1);
    ctx.bezierCurveTo(380.1,117.3,378,119.8,378,120.8);
    ctx.bezierCurveTo(378,121.39999999999999,379.9,122.89999999999999,382.3,124.1);
    ctx.bezierCurveTo(384.6,125.3,389.8,128.2,393.7,130.6);
    ctx.bezierCurveTo(399,133.79999999999998,401.9,135,404.8,135);
    ctx.bezierCurveTo(407.40000000000003,135,409.7,135.8,411.6,137.2);
    ctx.bezierCurveTo(413.20000000000005,138.39999999999998,415.3,139.29999999999998,416.3,139.1);
    ctx.bezierCurveTo(417.3,138.9,420.7,140.29999999999998,423.8,142.2);
    ctx.bezierCurveTo(426.90000000000003,144.1,432.3,147.1,435.8,148.79999999999998);
    ctx.bezierCurveTo(449.8,155.79999999999998,470.7,170.49999999999997,469.1,172.2);
    ctx.bezierCurveTo(468.5,172.79999999999998,459.3,173.39999999999998,445.8,173.6);
    ctx.bezierCurveTo(433.6,173.79999999999998,423,174.2,422.3,174.4);
    ctx.bezierCurveTo(419.8,175.20000000000002,422.6,177.8,440,190.9);
    ctx.bezierCurveTo(449.9,198.3,457.6,204.70000000000002,457.1,205.1);
    ctx.bezierCurveTo(455.40000000000003,206.79999999999998,434.40000000000003,208.79999999999998,423.90000000000003,208.2);
    ctx.bezierCurveTo(414.50000000000006,207.7,412.90000000000003,207.89999999999998,408.6,209.79999999999998);
    ctx.bezierCurveTo(404.8,211.49999999999997,403.90000000000003,212.29999999999998,404.5,213.6);
    ctx.bezierCurveTo(409.5,224.9,411.5,235.4,410.5,245.1);
    ctx.bezierCurveTo(409.5,254.6,408.8,255.1,403.9,249.5);
    ctx.bezierCurveTo(398.59999999999997,243.5,379.09999999999997,228.8,376.5,228.8);
    ctx.bezierCurveTo(374.6,228.8,368,235.60000000000002,368,237.60000000000002);
    ctx.bezierCurveTo(368,238.70000000000002,373,246.50000000000003,379,254.8);
    ctx.bezierCurveTo(392.6,273.6,404.2,309.3,402.6,327.6);
    ctx.bezierCurveTo(399.8,361.8,378.5,384.8,338,397.40000000000003);
    ctx.bezierCurveTo(331.7,399.40000000000003,325.9,401.50000000000006,325.2,402.20000000000005);
    ctx.bezierCurveTo(324.09999999999997,403.20000000000005,325.09999999999997,404.90000000000003,330.5,411.50000000000006);
    ctx.bezierCurveTo(334.1,415.90000000000003,338.2,420.30000000000007,339.5,421.20000000000005);
    ctx.bezierCurveTo(340.8,422.1,342.6,424.1,343.5,425.70000000000005);
    ctx.bezierCurveTo(344.9,428.6,362.2,443,364.1,443);
    ctx.bezierCurveTo(364.6,443,368.20000000000005,440.5,372.20000000000005,437.5);
    ctx.bezierCurveTo(389.70000000000005,424.4,411.20000000000005,413.7,425.70000000000005,410.9);
    ctx.bezierCurveTo(434.5,409.3,435,409.6,435,417.5);
    ctx.bezierCurveTo(435,421.9,434.6,424.2,433.8,424.4);
    ctx.bezierCurveTo(433.1,424.59999999999997,429.40000000000003,425.5,425.6,426.4);
    ctx.bezierCurveTo(417.6,428.29999999999995,403.5,434.59999999999997,402.70000000000005,436.59999999999997);
    ctx.bezierCurveTo(402.00000000000006,438.4,402.90000000000003,438.7,413.1,439.29999999999995);
    ctx.bezierCurveTo(423.1,439.9,436.3,441.79999999999995,438,442.9);
    ctx.bezierCurveTo(438.9,443.5,438.8,445.09999999999997,437.7,449.9);
    ctx.bezierCurveTo(436.9,453.4,436,456.4,435.8,456.59999999999997);
    ctx.bezierCurveTo(435.6,456.79999999999995,432,456.49999999999994,428,455.79999999999995);
    ctx.bezierCurveTo(420.1,454.49999999999994,388.7,453.99999999999994,385.9,455.19999999999993);
    ctx.bezierCurveTo(384.5,455.79999999999995,384.4,456.3999999999999,385.29999999999995,458.69999999999993);
    ctx.bezierCurveTo(386.19999999999993,461.19999999999993,385.9,462.19999999999993,383.09999999999997,466.79999999999995);
    ctx.bezierCurveTo(381.29999999999995,469.69999999999993,379.49999999999994,471.99999999999994,379.09999999999997,471.99999999999994);
    ctx.bezierCurveTo(378.7,471.99999999999994,375.79999999999995,470.19999999999993,372.59999999999997,467.99999999999994);
    ctx.bezierCurveTo(369.49999999999994,465.79999999999995,366.09999999999997,463.99999999999994,364.99999999999994,463.99999999999994);
    ctx.bezierCurveTo(363.59999999999997,463.99999999999994,355.69999999999993,471.99999999999994,352.19999999999993,476.8999999999999);
    ctx.bezierCurveTo(351.69999999999993,477.5999999999999,346.99999999999994,474.69999999999993,343.29999999999995,471.49999999999994);
    ctx.lineTo(339.79999999999995,468.49999999999994);
    ctx.lineTo(345.9,461.69999999999993);
    ctx.bezierCurveTo(349.3,458,352,454.5,352,454);
    ctx.bezierCurveTo(352,452.9,336.8,440.7,321.3,429.3);
    ctx.bezierCurveTo(315.7,425.2,310.8,420.8,310.40000000000003,419.7);
    ctx.bezierCurveTo(309.20000000000005,415.8,301.70000000000005,406,299.6,405.59999999999997);
    ctx.bezierCurveTo(298.4,405.3,289.4,404.9,279.5,404.6);
    ctx.bezierCurveTo(239.2,403.5,198,391.9,165.9,372.4);
    ctx.bezierCurveTo(162.8,370.5,159.7,369,159.1,369);
    ctx.bezierCurveTo(158.5,369,157.2,370.2,156.29999999999998,371.8);
    ctx.bezierCurveTo(153.79999999999998,375.8,135.49999999999997,393.5,127.99999999999999,399.1);
    ctx.bezierCurveTo(124.39999999999999,401.8,117.59999999999998,406.3,112.69999999999999,409.20000000000005);
    ctx.bezierCurveTo(107.89999999999999,412.1,103.39999999999999,415.00000000000006,102.89999999999999,415.70000000000005);
    ctx.bezierCurveTo(102.1,416.6,103.6,419.70000000000005,108.6,427.70000000000005);
    ctx.bezierCurveTo(116.3,439.9,127,460.4,127,462.9);
    ctx.bezierCurveTo(127,464,124.8,465.5,121,467.2);
    ctx.lineTo(115,469.8);
    ctx.lineTo(109.1,458.6);
    ctx.bezierCurveTo(103.19999999999999,447.40000000000003,100.39999999999999,444.6,99.5,449.1);
    ctx.bezierCurveTo(99.3,450.40000000000003,98.3,455.5,97.4,460.40000000000003);
    ctx.bezierCurveTo(95.10000000000001,473.1,93.80000000000001,476.90000000000003,92,476.8);
    ctx.bezierCurveTo(91.1,476.8,88,475.8,85.1,474.7);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#a2a349";
    ctx.beginPath();
    ctx.moveTo(347.2,162);
    ctx.bezierCurveTo(343.5,161.1,338.59999999999997,156.9,336.4,152.8);
    ctx.bezierCurveTo(334.2,148.60000000000002,334.59999999999997,140.20000000000002,337.29999999999995,135.60000000000002);
    ctx.bezierCurveTo(339.99999999999994,130.90000000000003,346.69999999999993,127.00000000000003,352.19999999999993,127.00000000000003);
    ctx.bezierCurveTo(364.8999999999999,127.00000000000003,373.8999999999999,141.40000000000003,368.19999999999993,152.60000000000002);
    ctx.bezierCurveTo(365.69999999999993,157.50000000000003,363.0999999999999,159.90000000000003,358.29999999999995,161.60000000000002);
    ctx.bezierCurveTo(353.99999999999994,163.10000000000002,351.99999999999994,163.20000000000002,347.19999999999993,162.10000000000002);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#e22a4a";
    ctx.beginPath();
    ctx.moveTo(346,159.9);
    ctx.bezierCurveTo(342.5,158.5,340.1,156.1,337.9,151.8);
    ctx.bezierCurveTo(333,142.3,338.9,131.3,350.29999999999995,128.60000000000002);
    ctx.bezierCurveTo(354.49999999999994,127.60000000000002,363.09999999999997,131.8,365.69999999999993,136.10000000000002);
    ctx.bezierCurveTo(369.19999999999993,141.90000000000003,369.3999999999999,145.3,366.5999999999999,151.40000000000003);
    ctx.bezierCurveTo(364.69999999999993,155.60000000000002,363.19999999999993,157.30000000000004,360.0999999999999,158.90000000000003);
    ctx.bezierCurveTo(355.7999999999999,161.10000000000002,350.0999999999999,161.50000000000003,345.9999999999999,159.80000000000004);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.restore();
};

var drawBackground = function(ctx) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(0,0);
    ctx.lineTo(1200,0);
    ctx.lineTo(1200,750);
    ctx.lineTo(0,750);
    ctx.closePath();
    ctx.clip();
    ctx.translate(0,0);
    ctx.translate(0,0);
    ctx.scale(1,1);
    ctx.translate(0,0);
    ctx.strokeStyle = 'rgba(0,0,0,0)';
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.save();
    ctx.fillStyle = "#fad2dc";
    ctx.beginPath();
    ctx.moveTo(0,375);
    ctx.lineTo(0,0);
    ctx.lineTo(600,0);
    ctx.lineTo(1200,0);
    ctx.lineTo(1200,375);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,375);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#fad2db";
    ctx.beginPath();
    ctx.moveTo(0,500.92857);
    ctx.bezierCurveTo(0,286.52462,0.19862547,251.65852,1.4270414,250.4301);
    ctx.bezierCurveTo(2.6561425,249.201,47.631808,248.96764,325.67704,248.74773);
    ctx.lineTo(648.5,248.4924);
    ctx.lineTo(324.42855,248.4962);
    ctx.bezierCurveTo(65.171381,248.49924,0.60710626,248.25,1.6071226,247.25);
    ctx.bezierCurveTo(2.6020351,246.2551,69.504773,246,329.42857,246);
    ctx.bezierCurveTo(619.04762,246,656,246.16973,656,247.5);
    ctx.bezierCurveTo(656,248.72295,657.67322,249,665.05902,249);
    ctx.bezierCurveTo(670.04148,249,673.87541,248.60743,673.57887,248.12762);
    ctx.bezierCurveTo(673.2823400000001,247.64781000000002,674.71828,246.97776000000002,676.7698600000001,246.63863);
    ctx.bezierCurveTo(678.82144,246.29949000000002,796.7446400000001,246.01706000000001,938.8214300000002,246.01101);
    ctx.bezierCurveTo(1144.1570000000002,246.00201,1197.3993000000003,246.25639,1198.3929000000003,247.25);
    ctx.bezierCurveTo(1199.3929000000003,248.25,1148.7286000000004,248.49904,945.0714600000003,248.49519);
    ctx.lineTo(690.5000000000003,248.49019);
    ctx.lineTo(943.8233700000003,248.74695000000003);
    ctx.bezierCurveTo(1161.6344000000004,248.96771000000004,1197.3467000000003,249.20370000000003,1198.5734000000002,250.43033000000003);
    ctx.bezierCurveTo(1199.8012,251.65820000000002,1200.0000000000002,286.55815,1200.0000000000002,500.92839000000004);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.92857);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#e0bcc4";
    ctx.beginPath();
    ctx.moveTo(0,500.92857);
    ctx.bezierCurveTo(0,286.4,0.19812364,251.65902,1.4285714,250.42857);
    ctx.bezierCurveTo(3.5867145000000002,248.27043,1196.4133,248.27043,1198.5714,250.42857);
    ctx.bezierCurveTo(1199.8019,251.65902,1200,286.4,1200,500.92857000000004);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.92857);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#debcc4";
    ctx.beginPath();
    ctx.moveTo(0,500.92857);
    ctx.bezierCurveTo(0,286.45901,0.19836138,251.65878,1.4278466,250.4293);
    ctx.bezierCurveTo(3.5837633,248.27338,1196.4173,248.27443,1198.5732,250.43035);
    ctx.bezierCurveTo(1199.8013,251.65844,1200,286.5451,1200,500.92857);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.92857);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#a38990";
    ctx.beginPath();
    ctx.moveTo(0,500.60699);
    ctx.bezierCurveTo(0,274.11567,0.14525512,251.15824,1.5817875,250.60699);
    ctx.bezierCurveTo(3.6501079,249.8133,1196.3499,249.8133,1198.4182,250.60699);
    ctx.bezierCurveTo(1199.8547,251.15824,1200,274.11567,1200,500.60699);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.60699);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#56484c";
    ctx.beginPath();
    ctx.moveTo(0,500.5);
    ctx.lineTo(0,251);
    ctx.lineTo(600,251);
    ctx.lineTo(1200,251);
    ctx.lineTo(1200,500.5);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.5);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#1a1617";
    ctx.beginPath();
    ctx.moveTo(0,500.75);
    ctx.lineTo(0,251.5);
    ctx.lineTo(600,251.5);
    ctx.lineTo(1200,251.5);
    ctx.lineTo(1200,500.75);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.75);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#000000";
    ctx.beginPath();
    ctx.moveTo(0,500.5);
    ctx.bezierCurveTo(0,334.83333,0.33600534,251,1,251);
    ctx.bezierCurveTo(1.55,251,2,251.45,2,252);
    ctx.bezierCurveTo(2,252.66555,202,253,600,253);
    ctx.bezierCurveTo(998,253,1198,252.66555,1198,252);
    ctx.bezierCurveTo(1198,251.45,1198.45,251,1199,251);
    ctx.bezierCurveTo(1199.664,251,1200,334.83333,1200,500.5);
    ctx.lineTo(1200,750);
    ctx.lineTo(600,750);
    ctx.lineTo(0,750);
    ctx.lineTo(0,500.5);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.restore();
    ctx.restore();
};

var drawWall = function(ctx) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(0,0);
    ctx.lineTo(1024,0);
    ctx.lineTo(1024,1024);
    ctx.lineTo(0,1024);
    ctx.closePath();
    ctx.clip();
    ctx.translate(0,0);
    ctx.translate(0,0);
    ctx.scale(1,1);
    ctx.translate(0,0);
    ctx.strokeStyle = 'rgba(0,0,0,0)';
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;
    ctx.save();
    ctx.restore();
    ctx.save();
    ctx.fillStyle = "#c9c9c9";
    ctx.beginPath();
    ctx.moveTo(0,2.1694915);
    ctx.lineTo(1024,2.1694915);
    ctx.lineTo(1024,1026.1695);
    ctx.lineTo(0,1026.1695);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.save();
    ctx.transform(2,0,0,2,0,2.1694915);
    ctx.save();
    ctx.fillStyle = "#d0021b";
    ctx.beginPath();
    ctx.moveTo(494,18.02);
    ctx.lineTo(393,18.123);
    ctx.lineTo(393,119);
    ctx.lineTo(494,119);
    ctx.closePath();
    ctx.moveTo(375,18.14);
    ctx.lineTo(137,18.387);
    ctx.lineTo(137,119);
    ctx.lineTo(375,119);
    ctx.closePath();
    ctx.moveTo(119,18.406);
    ctx.lineTo(18,18.51);
    ctx.lineTo(18,119);
    ctx.lineTo(119,119);
    ctx.closePath();
    ctx.moveTo(18,137);
    ctx.lineTo(18,247);
    ctx.lineTo(247,247);
    ctx.lineTo(247,137);
    ctx.closePath();
    ctx.moveTo(494,137);
    ctx.lineTo(494,247);
    ctx.lineTo(723,247);
    ctx.lineTo(723,137);
    ctx.closePath();
    ctx.moveTo(476,265);
    ctx.lineTo(476,375);
    ctx.lineTo(577,375);
    ctx.lineTo(577,265);
    ctx.closePath();
    ctx.moveTo(696,265);
    ctx.lineTo(696,375);
    ctx.lineTo(934,375);
    ctx.lineTo(934,265);
    ctx.closePath();
    ctx.moveTo(1190,265);
    ctx.lineTo(1190,375);
    ctx.lineTo(1291,375);
    ctx.lineTo(1291,265);
    ctx.closePath();
    ctx.moveTo(18,393);
    ctx.lineTo(18,493.98);
    ctx.lineTo(247,493.744);
    ctx.lineTo(247,393);
    ctx.closePath();
    ctx.moveTo(494,393);
    ctx.lineTo(494,493.727);
    ctx.lineTo(723,493.48999999999995);
    ctx.lineTo(723,392.99999999999994);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
    ctx.restore();
    ctx.restore();
    ctx.restore();
};

var display = document.getElementById('display');
var player = new Player(15.3, -1.2, Math.PI * 0.3);
var map = new Map(32, new canvasToImage(drawBackground, 1200, 750),
    new canvasToImage(drawWall, 1024, 1024));
var controls = new Controls();
var camera = new Camera(display, MOBILE ? 160 : 320, 0.8);
var loop = new GameLoop();
map.randomize();

loop.start(function frame(seconds) {
    map.update(seconds);
    player.update(controls.states, map, seconds);
    camera.render(player, map);
});
})();